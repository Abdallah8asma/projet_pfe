version: '3.8'

services:
  frontend:
    build:
      context: ./ma-gpro-design-war/
    ports:
      - "80:8080"
    depends_on:
      - mt-gpro-commun
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  mt-gpro-commun:
    build:
      context: .
      dockerfile: Dockerfile.mt-gpro-commun
    ports:
      - "8889:8080"
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  ma-gpro-logistique:
    build:
      context: .
      dockerfile: Dockerfile.ma-gpro-logistique
    ports:
      - "8890:8080"
    depends_on:
      - mt-gpro-commun
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
 
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: commercial-industriel
    ports:
      - "5432:5432"
    volumes:
      - pg:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
volumes:
  pg:
