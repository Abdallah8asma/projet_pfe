version: '3.8'

services:
  frontend:
    build:
      context: ./ma-gpro-design-war/
    ports:
      - "80:8080"
    depends_on:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 20s
      retries: 5
    networks:
      - mynetwork

  backend:
    build:
      context: .
    ports:
      - "8888:8080"
    depends_on:
      - postgres
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 20s
      retries: 5
    networks:
      - mynetwork

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: commercial-industriel
    ports:
      - "5432:5432"
    volumes:
      - pg:/var/lib/postgresql/data
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mynetwork

volumes:
  pg:
    
networks:
  mynetwork:
    driver: bridge
